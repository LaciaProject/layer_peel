name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libmagic1

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install libmagic

    - name: Create virtual environment and install dependencies
      run: |
        uv venv --python ${{ matrix.python-version }}
        uv pip install -e ".[dev,test]"

    - name: Lint and format with ruff
      run: |
        uv run ruff check src/ tests/
        uv run ruff format --check src/ tests/

    - name: Type check with mypy
      run: |
        uv run mypy src/

    - name: Test with pytest
      run: |
        uv run pytest tests/ -v --cov=layer_peel --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.11

    - name: Create virtual environment and install dependencies
      run: |
        uv venv --python 3.11
        uv pip install bandit[toml] safety

    - name: Run security checks with bandit
      run: |
        uv run bandit -r src/ -f json -o bandit-report.json || true
        uv run bandit -r src/

    - name: Check dependencies with safety
      run: |
        uv run safety check

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python
      run: uv python install 3.11

    - name: Create virtual environment and install build dependencies
      run: |
        uv venv --python 3.11
        uv pip install build twine

    - name: Build package
      run: |
        uv run python -m build

    - name: Check package
      run: |
        uv run twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/
